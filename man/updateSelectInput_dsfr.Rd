% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_selectinput_dsfr.R,
%   R/updateselectinput_dsfr.R
\name{updateSelectInput_dsfr}
\alias{updateSelectInput_dsfr}
\title{updateSelectInput_dsfr}
\usage{
updateSelectInput_dsfr(
  inputId,
  label = NULL,
  choices = NULL,
  selected = NULL,
  session = shiny::getDefaultReactiveDomain()
)

updateSelectInput_dsfr(
  inputId,
  label = NULL,
  choices = NULL,
  selected = NULL,
  session = shiny::getDefaultReactiveDomain()
)
}
\arguments{
\item{inputId}{id de l'input}

\item{label}{label du bouton}

\item{choices}{Liste des valeurs à sélectionner (si les éléments de la liste portent un nom, c'est ce nom qui est affiché à l'utilisateur et non la valeur)}

\item{selected}{Element selectionné}

\item{session}{la session, la valeur par défaut est getDefaultReactiveDomain().}
}
\value{
html

html
}
\description{
updateSelectInput_dsfr

updateSelectInput_dsfr
}
\examples{
## Only run examples in interactive R sessions
if (interactive()) {
  library(shiny)
  library(shinygouv)

  ui <- fluidPage_dsfr(
    header = header_dsfr(
      intitule = "Intitule",
      officiel = "Officiel",
      nom_site_service = "Nom du site / service",
      baseline = "baseline - precisions sur l organisation",
      class = "fr-m-1w"
    ),
    title = "Exemple",
    fluidRow_dsfr(
      selectInput_dsfr(
        inputId = "variable",
        label = "Variable:",
        choices = c(
          "Cylinders" = "cyl",
          "Transmission" = "am",
          "Gears" = "gear"
        )
      )
    ),
    fluidRow_dsfr(
      actionButton_dsfr(inputId = "update", label = "update label")
    ),
    fluidRow_dsfr(
      actionButton_dsfr(inputId = "update2", label = "update choices")
    ),
    fluidRow_dsfr(
      actionButton_dsfr(inputId = "update3", label = "update selected")
    )
  )
  server <- function(input, output, session) {
    observeEvent(input$update, {
      updateSelectInput_dsfr(inputId = "variable", label = "Nouveau label")
    })

    observeEvent(input$update2, {
      updateSelectInput_dsfr(inputId = "variable", choices = LETTERS)
    })

    observeEvent(input$update3, {
      updateSelectInput_dsfr(inputId = "variable", selected = LETTERS[12])
    })
  }

  shinyApp(ui, server)
}
## Only run examples in interactive R sessions
if (interactive()) {
  library(shiny)
  library(shinygouv)

  ui <- fluidPage_dsfr(
    header = header_dsfr(
      intitule = "Intitule",
      officiel = "Officiel",
      nom_site_service = "Nom du site / service",
      baseline = "baseline - precisions sur l organisation",
      class = "fr-m-1w"
    ),
    title = "Exemple",
    fluidRow_dsfr(
      selectInput_dsfr(
        inputId = "variable",
        label = "Variable:",
        choices = c(
          "Cylinders" = "cyl",
          "Transmission" = "am",
          "Gears" = "gear"
        )
      )
    ),
    fluidRow_dsfr(
      actionButton_dsfr(inputId = "update", label = "update label")
    ),
    fluidRow_dsfr(
      actionButton_dsfr(inputId = "update2", label = "update choices")
    ),
    fluidRow_dsfr(
      actionButton_dsfr(inputId = "update3", label = "update selected")
    )
  )
  server <- function(input, output, session) {
    observeEvent(input$update, {
      updateSelectInput_dsfr(inputId = "variable", label = "Nouveau label")
    })

    observeEvent(input$update2, {
      updateSelectInput_dsfr(inputId = "variable", choices = LETTERS)
    })

    observeEvent(input$update3, {
      updateSelectInput_dsfr(inputId = "variable", selected = LETTERS[12])
    })
  }

  shinyApp(ui, server)
}
}
